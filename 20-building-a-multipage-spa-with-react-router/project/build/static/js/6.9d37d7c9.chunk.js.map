{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","isEntering","setIsEntering","when","message","location","console","log","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","data"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBCwD/BC,EArDG,SAACL,GACjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBACrB,EAAoCE,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAsBA,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CAAQC,KAAMF,EAAYG,QATd,SAAAC,GAEd,OADAC,QAAQC,IAAIF,GACL,yEAQL,cAAC,EAAD,UACE,uBAAMG,QAbe,kBAAMN,GAAc,IAaNV,UAAWC,IAAQgB,KAAMC,SAxBlE,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBhB,EAAeiB,QAAQC,MACvCC,EAAcjB,EAAae,QAAQC,MAIzCxB,EAAM0B,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAgB5C,UACGzB,EAAM6B,WACL,qBAAK5B,UAAWC,IAAQ4B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK9B,UAAWC,IAAQ8B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK9B,OAEtC,sBAAKL,UAAWC,IAAQ8B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAK5B,OAEpC,qBAAKP,UAAWC,IAAQoC,QAAxB,SACE,wBAAQC,QAtBY,kBAAM5B,GAAc,IAsBAV,UAAU,MAAlD,kC,gBC9BIuC,UAfC,WACf,MAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OACfC,EAAUC,cAEhBC,qBAAU,WACO,cAAXH,GACFC,EAAQG,KAAK,aAEd,CAACJ,EAAQC,IAIZ,OAAO,cAAC,EAAD,CAAWhB,UAAsB,YAAXe,EAAsBlB,WAF3B,SAAAuB,GAAI,OAAIN,EAAYM","file":"static/js/6.9d37d7c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState, Fragment } from 'react';\nimport { Prompt } from 'react-router';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEntering, setIsEntering] = useState(false)\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusedHandler = () => setIsEntering(true)\n\n  const onLeave = location => {\n    console.log(location)\n    return 'Are you sure you want to leave? All your entered data will be lost.'\n  }\n\n  const finishEnteringHandler = () => setIsEntering(false)\n\n  return (\n    <Fragment>\n      <Prompt when={isEntering} message={onLeave} />\n      <Card>\n        <form onFocus={formFocusedHandler} className={classes.form} onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useHistory } from \"react-router\"\nimport QuoteForm from \"../components/quotes/QuoteForm\"\nimport useHttp from '../hooks/use-http'\nimport { addQuote } from \"../lib/api\"\nimport { useEffect } from \"react\"\n\nconst NewQuote = () => {\n  const { sendRequest, status } = useHttp(addQuote)\n  const history = useHistory()\n\n  useEffect(() => {\n    if (status === 'completed') {\n      history.push('/quotes')\n    }\n  }, [status, history])\n\n  const addQuoteHandler = data => sendRequest(data)\n\n  return <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler}/>\n}\n\n export default NewQuote"],"sourceRoot":""}